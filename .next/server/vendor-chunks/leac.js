"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/leac";
exports.ids = ["vendor-chunks/leac"];
exports.modules = {

/***/ "(action-browser)/./node_modules/leac/lib/leac.mjs":
/*!****************************************!*\
  !*** ./node_modules/leac/lib/leac.mjs ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createLexer: () => (/* binding */ o)\n/* harmony export */ });\nconst e = /\\n/g;\nfunction n(n) {\n    const o = [\n        ...n.matchAll(e)\n    ].map((e)=>e.index || 0);\n    o.unshift(-1);\n    const s = t(o, 0, o.length);\n    return (e)=>r(s, e);\n}\nfunction t(e, n, r) {\n    if (r - n == 1) return {\n        offset: e[n],\n        index: n + 1\n    };\n    const o = Math.ceil((n + r) / 2), s = t(e, n, o), l = t(e, o, r);\n    return {\n        offset: s.offset,\n        low: s,\n        high: l\n    };\n}\nfunction r(e, n) {\n    return function(e) {\n        return Object.prototype.hasOwnProperty.call(e, \"index\");\n    }(e) ? {\n        line: e.index,\n        column: n - e.offset\n    } : r(e.high.offset < n ? e.high : e.low, n);\n}\nfunction o(e, t = \"\", r = {}) {\n    const o = \"string\" != typeof t ? t : r, l = \"string\" == typeof t ? t : \"\", c = e.map(s), f = !!o.lineNumbers;\n    return function(e, t = 0) {\n        const r = f ? n(e) : ()=>({\n                line: 0,\n                column: 0\n            });\n        let o = t;\n        const s = [];\n        e: for(; o < e.length;){\n            let n = !1;\n            for (const t of c){\n                t.regex.lastIndex = o;\n                const c = t.regex.exec(e);\n                if (c && c[0].length > 0) {\n                    if (!t.discard) {\n                        const e = r(o), n = \"string\" == typeof t.replace ? c[0].replace(new RegExp(t.regex.source, t.regex.flags), t.replace) : c[0];\n                        s.push({\n                            state: l,\n                            name: t.name,\n                            text: n,\n                            offset: o,\n                            len: c[0].length,\n                            line: e.line,\n                            column: e.column\n                        });\n                    }\n                    if (o = t.regex.lastIndex, n = !0, t.push) {\n                        const n = t.push(e, o);\n                        s.push(...n.tokens), o = n.offset;\n                    }\n                    if (t.pop) break e;\n                    break;\n                }\n            }\n            if (!n) break;\n        }\n        return {\n            tokens: s,\n            offset: o,\n            complete: e.length <= o\n        };\n    };\n}\nfunction s(e, n) {\n    return {\n        ...e,\n        regex: l(e, n)\n    };\n}\nfunction l(e, n) {\n    if (0 === e.name.length) throw new Error(`Rule #${n} has empty name, which is not allowed.`);\n    if (function(e) {\n        return Object.prototype.hasOwnProperty.call(e, \"regex\");\n    }(e)) return function(e) {\n        if (e.global) throw new Error(`Regular expression /${e.source}/${e.flags} contains the global flag, which is not allowed.`);\n        return e.sticky ? e : new RegExp(e.source, e.flags + \"y\");\n    }(e.regex);\n    if (function(e) {\n        return Object.prototype.hasOwnProperty.call(e, \"str\");\n    }(e)) {\n        if (0 === e.str.length) throw new Error(`Rule #${n} (\"${e.name}\") has empty \"str\" property, which is not allowed.`);\n        return new RegExp(c(e.str), \"y\");\n    }\n    return new RegExp(c(e.name), \"y\");\n}\nfunction c(e) {\n    return e.replace(/[-[\\]{}()*+!<=:?./\\\\^$|#\\s,]/g, \"\\\\$&\");\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9sZWFjL2xpYi9sZWFjLm1qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsTUFBTUEsSUFBRTtBQUFNLFNBQVNDLEVBQUVBLENBQUM7SUFBRSxNQUFNQyxJQUFFO1dBQUlELEVBQUVFLFFBQVEsQ0FBQ0g7S0FBRyxDQUFDSSxHQUFHLENBQUVKLENBQUFBLElBQUdBLEVBQUVLLEtBQUssSUFBRTtJQUFJSCxFQUFFSSxPQUFPLENBQUMsQ0FBQztJQUFHLE1BQU1DLElBQUVDLEVBQUVOLEdBQUUsR0FBRUEsRUFBRU8sTUFBTTtJQUFFLE9BQU9ULENBQUFBLElBQUdVLEVBQUVILEdBQUVQO0FBQUU7QUFBQyxTQUFTUSxFQUFFUixDQUFDLEVBQUNDLENBQUMsRUFBQ1MsQ0FBQztJQUFFLElBQUdBLElBQUVULEtBQUcsR0FBRSxPQUFNO1FBQUNVLFFBQU9YLENBQUMsQ0FBQ0MsRUFBRTtRQUFDSSxPQUFNSixJQUFFO0lBQUM7SUFBRSxNQUFNQyxJQUFFVSxLQUFLQyxJQUFJLENBQUMsQ0FBQ1osSUFBRVMsQ0FBQUEsSUFBRyxJQUFHSCxJQUFFQyxFQUFFUixHQUFFQyxHQUFFQyxJQUFHWSxJQUFFTixFQUFFUixHQUFFRSxHQUFFUTtJQUFHLE9BQU07UUFBQ0MsUUFBT0osRUFBRUksTUFBTTtRQUFDSSxLQUFJUjtRQUFFUyxNQUFLRjtJQUFDO0FBQUM7QUFBQyxTQUFTSixFQUFFVixDQUFDLEVBQUNDLENBQUM7SUFBRSxPQUFPLFNBQVNELENBQUM7UUFBRSxPQUFPaUIsT0FBT0MsU0FBUyxDQUFDQyxjQUFjLENBQUNDLElBQUksQ0FBQ3BCLEdBQUU7SUFBUSxFQUFFQSxLQUFHO1FBQUNxQixNQUFLckIsRUFBRUssS0FBSztRQUFDaUIsUUFBT3JCLElBQUVELEVBQUVXLE1BQU07SUFBQSxJQUFFRCxFQUFFVixFQUFFZ0IsSUFBSSxDQUFDTCxNQUFNLEdBQUNWLElBQUVELEVBQUVnQixJQUFJLEdBQUNoQixFQUFFZSxHQUFH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RWlDLEtBQUssQ0FBQyxnREFBZ0QsQ0FBQztRQUFFLE9BQU9qQyxFQUFFNEMsTUFBTSxHQUFDNUMsSUFBRSxJQUFJK0IsT0FBTy9CLEVBQUVnQyxNQUFNLEVBQUNoQyxFQUFFaUMsS0FBSyxHQUFDO0lBQUksRUFBRWpDLEVBQUUwQixLQUFLO0lBQUUsSUFBRyxTQUFTMUIsQ0FBQztRQUFFLE9BQU9pQixPQUFPQyxTQUFTLENBQUNDLGNBQWMsQ0FBQ0MsSUFBSSxDQUFDcEIsR0FBRTtJQUFNLEVBQUVBLElBQUc7UUFBQyxJQUFHLE1BQUlBLEVBQUU2QyxHQUFHLENBQUNwQyxNQUFNLEVBQUMsTUFBTSxJQUFJaUMsTUFBTSxDQUFDLE1BQU0sRUFBRXpDLEVBQUUsR0FBRyxFQUFFRCxFQUFFb0MsSUFBSSxDQUFDLGtEQUFrRCxDQUFDO1FBQUUsT0FBTyxJQUFJTCxPQUFPUixFQUFFdkIsRUFBRTZDLEdBQUcsR0FBRTtJQUFJO0lBQUMsT0FBTyxJQUFJZCxPQUFPUixFQUFFdkIsRUFBRW9DLElBQUksR0FBRTtBQUFJO0FBQUMsU0FBU2IsRUFBRXZCLENBQUM7SUFBRSxPQUFPQSxFQUFFOEIsT0FBTyxDQUFDLGlDQUFnQztBQUFPO0FBQTBCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcG9ydGZvbGlvLy4vbm9kZV9tb2R1bGVzL2xlYWMvbGliL2xlYWMubWpzP2MxOTYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZT0vXFxuL2c7ZnVuY3Rpb24gbihuKXtjb25zdCBvPVsuLi5uLm1hdGNoQWxsKGUpXS5tYXAoKGU9PmUuaW5kZXh8fDApKTtvLnVuc2hpZnQoLTEpO2NvbnN0IHM9dChvLDAsby5sZW5ndGgpO3JldHVybiBlPT5yKHMsZSl9ZnVuY3Rpb24gdChlLG4scil7aWYoci1uPT0xKXJldHVybntvZmZzZXQ6ZVtuXSxpbmRleDpuKzF9O2NvbnN0IG89TWF0aC5jZWlsKChuK3IpLzIpLHM9dChlLG4sbyksbD10KGUsbyxyKTtyZXR1cm57b2Zmc2V0OnMub2Zmc2V0LGxvdzpzLGhpZ2g6bH19ZnVuY3Rpb24gcihlLG4pe3JldHVybiBmdW5jdGlvbihlKXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGUsXCJpbmRleFwiKX0oZSk/e2xpbmU6ZS5pbmRleCxjb2x1bW46bi1lLm9mZnNldH06cihlLmhpZ2gub2Zmc2V0PG4/ZS5oaWdoOmUubG93LG4pfWZ1bmN0aW9uIG8oZSx0PVwiXCIscj17fSl7Y29uc3Qgbz1cInN0cmluZ1wiIT10eXBlb2YgdD90OnIsbD1cInN0cmluZ1wiPT10eXBlb2YgdD90OlwiXCIsYz1lLm1hcChzKSxmPSEhby5saW5lTnVtYmVycztyZXR1cm4gZnVuY3Rpb24oZSx0PTApe2NvbnN0IHI9Zj9uKGUpOigpPT4oe2xpbmU6MCxjb2x1bW46MH0pO2xldCBvPXQ7Y29uc3Qgcz1bXTtlOmZvcig7bzxlLmxlbmd0aDspe2xldCBuPSExO2Zvcihjb25zdCB0IG9mIGMpe3QucmVnZXgubGFzdEluZGV4PW87Y29uc3QgYz10LnJlZ2V4LmV4ZWMoZSk7aWYoYyYmY1swXS5sZW5ndGg+MCl7aWYoIXQuZGlzY2FyZCl7Y29uc3QgZT1yKG8pLG49XCJzdHJpbmdcIj09dHlwZW9mIHQucmVwbGFjZT9jWzBdLnJlcGxhY2UobmV3IFJlZ0V4cCh0LnJlZ2V4LnNvdXJjZSx0LnJlZ2V4LmZsYWdzKSx0LnJlcGxhY2UpOmNbMF07cy5wdXNoKHtzdGF0ZTpsLG5hbWU6dC5uYW1lLHRleHQ6bixvZmZzZXQ6byxsZW46Y1swXS5sZW5ndGgsbGluZTplLmxpbmUsY29sdW1uOmUuY29sdW1ufSl9aWYobz10LnJlZ2V4Lmxhc3RJbmRleCxuPSEwLHQucHVzaCl7Y29uc3Qgbj10LnB1c2goZSxvKTtzLnB1c2goLi4ubi50b2tlbnMpLG89bi5vZmZzZXR9aWYodC5wb3ApYnJlYWsgZTticmVha319aWYoIW4pYnJlYWt9cmV0dXJue3Rva2VuczpzLG9mZnNldDpvLGNvbXBsZXRlOmUubGVuZ3RoPD1vfX19ZnVuY3Rpb24gcyhlLG4pe3JldHVybnsuLi5lLHJlZ2V4OmwoZSxuKX19ZnVuY3Rpb24gbChlLG4pe2lmKDA9PT1lLm5hbWUubGVuZ3RoKXRocm93IG5ldyBFcnJvcihgUnVsZSAjJHtufSBoYXMgZW1wdHkgbmFtZSwgd2hpY2ggaXMgbm90IGFsbG93ZWQuYCk7aWYoZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChlLFwicmVnZXhcIil9KGUpKXJldHVybiBmdW5jdGlvbihlKXtpZihlLmdsb2JhbCl0aHJvdyBuZXcgRXJyb3IoYFJlZ3VsYXIgZXhwcmVzc2lvbiAvJHtlLnNvdXJjZX0vJHtlLmZsYWdzfSBjb250YWlucyB0aGUgZ2xvYmFsIGZsYWcsIHdoaWNoIGlzIG5vdCBhbGxvd2VkLmApO3JldHVybiBlLnN0aWNreT9lOm5ldyBSZWdFeHAoZS5zb3VyY2UsZS5mbGFncytcInlcIil9KGUucmVnZXgpO2lmKGZ1bmN0aW9uKGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZSxcInN0clwiKX0oZSkpe2lmKDA9PT1lLnN0ci5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKGBSdWxlICMke259IChcIiR7ZS5uYW1lfVwiKSBoYXMgZW1wdHkgXCJzdHJcIiBwcm9wZXJ0eSwgd2hpY2ggaXMgbm90IGFsbG93ZWQuYCk7cmV0dXJuIG5ldyBSZWdFeHAoYyhlLnN0ciksXCJ5XCIpfXJldHVybiBuZXcgUmVnRXhwKGMoZS5uYW1lKSxcInlcIil9ZnVuY3Rpb24gYyhlKXtyZXR1cm4gZS5yZXBsYWNlKC9bLVtcXF17fSgpKishPD06Py4vXFxcXF4kfCNcXHMsXS9nLFwiXFxcXCQmXCIpfWV4cG9ydHtvIGFzIGNyZWF0ZUxleGVyfTtcbiJdLCJuYW1lcyI6WyJlIiwibiIsIm8iLCJtYXRjaEFsbCIsIm1hcCIsImluZGV4IiwidW5zaGlmdCIsInMiLCJ0IiwibGVuZ3RoIiwiciIsIm9mZnNldCIsIk1hdGgiLCJjZWlsIiwibCIsImxvdyIsImhpZ2giLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJsaW5lIiwiY29sdW1uIiwiYyIsImYiLCJsaW5lTnVtYmVycyIsInJlZ2V4IiwibGFzdEluZGV4IiwiZXhlYyIsImRpc2NhcmQiLCJyZXBsYWNlIiwiUmVnRXhwIiwic291cmNlIiwiZmxhZ3MiLCJwdXNoIiwic3RhdGUiLCJuYW1lIiwidGV4dCIsImxlbiIsInRva2VucyIsInBvcCIsImNvbXBsZXRlIiwiRXJyb3IiLCJnbG9iYWwiLCJzdGlja3kiLCJzdHIiLCJjcmVhdGVMZXhlciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/leac/lib/leac.mjs\n");

/***/ })

};
;